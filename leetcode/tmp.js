const grid = [
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '0',
    '1',
    '1',
  ],
  [
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
  ],
  [
    '1',
    '0',
    '1',
    '1',
    '1',
    '0',
    '0',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '0',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
  ],
  [
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '0',
    '1',
    '1',
    '1',
    '1',
    '0',
    '0',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
  [
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
    '1',
  ],
];

const isIsland = (A, i, j) => A[i][j] === '1' || A[i][j] === 1;

const traverseAndMark = (A, startCol, startRow, visited, n, m) => {
  const nodesToVisit = [[startCol, startRow]];
  while (nodesToVisit.length > 0) {
    const [i, j] = nodesToVisit.shift();
    visited[i][j] = true;
    const candidates = [
      [i + 1, j],
      [i, j + 1],
      [i - 1, j],
      [i, j - 1],
    ].filter(
      ([x, y]) =>
        0 <= x &&
        x < n &&
        0 <= y &&
        y < m &&
        x !== startCol &&
        y !== startRow &&
        !visited[x][y] &&
        isIsland(A, x, y),
    );

    console.log({ candidates });

    nodesToVisit.push(...candidates);
  }
};
const numIslands = (grid) => {
  const n = grid.length;
  const m = grid[0] ? grid[0].length : 0;
  let islandsCount = 0;

  if (!n || !m) {
    return 0;
  }
  const visited = Array(n);

  console.log('initializing array', { m, n });
  for (let i = 0; i < n; i++) {
    visited[i] = Array(m).fill(0);
  }
  console.log('starting...');

  for (let i = 0; i < n; i++) {
    for (let j = 0; j < m; j++) {
      if (visited[i][j]) {
        console.log('found visited elem, skip,', { i, j });
        continue;
      }

      if (isIsland(grid, i, j)) {
        console.log('entering island', [i, j]);
        islandsCount += 1;
        traverseAndMark(grid, i, j, visited, n, m);
      }
    }
  }

  return islandsCount;
};

const result = numIslands(grid);
console.log({ result });
